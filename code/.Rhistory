nr = length(levels(droplevels(factor(mcoefs[bpos == bp]$aapos))))
g <- ggplot(mcoefs[bpos == bp], aes(x = aa, y = base, fill = coef)) +
geom_tile(color = 'black') +
scale_fill_gradient2("Coefficient", low = 'blue', high = 'red')+
facet_wrap(~aapos, nrow = nr)+
geom_text(aes(label = count.train), size = 2) +
theme_classic()
ggsave(plot = g, file = paste0(coefDir, 'b',bp, '_coefs_nObsAA.pdf'),
height = 1.2*nr +.5, width = 6)
g <- ggplot(mcoefs[bpos == bp], aes(x = aa, y = base, fill = coef)) +
geom_tile(color = 'black') +
scale_fill_gradient2("Coefficient", low = 'blue', high = 'red')+
facet_wrap(~aapos, nrow = nr)+
geom_text(aes(label = count.predWrong), size = 2) +
theme_classic()
ggsave(plot = g, file = paste0(coefDir, 'b',bp, '_coefs_predWrongCount.pdf'),
height = 1.2*nr +.5, width = 6)
}
# Info for removing proteins used for training rf_extant or rf_joint
motifInfo.cisbp <- fread('~/research/cisBP/hboxOnlyInfo.txt')
trPubs.rfExtant <- c('Berger08','Zhu09','FlyFactorSurvey')
trSet.rfExtant <- unique(motifInfo.cisbp[MSource_Identifier %in% trPubs.rfExtant]$TF_Name)
#trSet.rfExtant.cores <- unique(res[predType != 'rf_joint' & !(prot %in% trSet.rfExtant))
trSet.rfJoint <-
union(unique(motifInfo.cisbp[MSource_Identifier %in% trPubs.rfExtant]$TF_Name),
unique(matchTab[dset == 'Chu2012']$prot))
# For the Barrera 2016 mutants that vary in only a single base-contacting position,
# how well do we do by transferring columns from the wild-type if they don't
# the column doesn't contact the varied amino acid position, then predicting
# only the remaining columns?  Do we do better than a de novo prediction from
# the Stormo group?
if (!INCLUDE_RF_ALI) {
transfer <- fread(paste0(RES_DIR,'pccTable_BarreraMuts_transfer-modelNN.txt'))
transfer$predType <- 'transfer-model+NN'
setkey(transfer, prot,pos)
xferOrder <- transfer$transfer; varPosOrder <- transfer$varPos;
tmp <- fread(paste0(RES_DIR,'pccTable_BarreraMuts_transfer-model.txt'))
tmp$predType <- 'transfer-model'
transfer <- rbind(transfer, tmp)
tmp <- fread(paste0(stormoFiles[1]))[prot %in% transfer$prot]
setkey(tmp, prot,pos)
tmp$transfer <- xferOrder; tmp$varPos <- varPosOrder; tmp$predType <- stormoLabs[1]
transfer <- rbind(transfer, tmp)
tmp <- fread(paste0(stormoFiles[2]))[prot %in% transfer$prot]
setkey(tmp, prot,pos)
tmp$transfer <- xferOrder; tmp$varPos <- varPosOrder; tmp$predType <- stormoLabs[2]
transfer <- rbind(transfer, tmp)
transfer$predType <-
factor(transfer$predType, levels = c('transfer-model','transfer-model+NN',stormoLabs))
transfer$pos <- factor(transfer$pos)
# Toss columns where binding was lost
transfer <- transfer[!(prot %in% barrera.drop)]
# Get aggregate agreement stats
transfer$transfer <- ifelse(transfer$transfer, 'transfer possible',
'requires predicition')
transferSumm <- transfer[,.(fracAgree = length(which(pcc >= 0.5))/.N,
numCols = .N),
by = c('pos','predType')]
transferSumm.byColType <- transfer[,.(fracAgree = length(which(pcc >= 0.5))/.N,
numCols = .N),
by = c('predType','transfer')]
# Compare overall per-position performance
g <- ggplot(transferSumm, aes(x = pos, y = fracAgree, fill = predType)) +
geom_bar(color = 'black', width = 0.6, stat = 'identity', position = 'dodge') +
scale_y_continuous(limits = c(0,1)) +
scale_fill_brewer(palette = 'Dark2') +
labs(x = "Binding site position", y = "Columns in agreement (predicted vs. actual)") +
theme_classic()
ggsave(plot = g, file = paste0(RES_DIR, 'transfer_barreraMuts_pcc_fracAgree.pdf'),
height = 4, width = 6)
g <- ggplot(transfer, aes(x = pos, y = rmse, fill = predType)) +
geom_boxplot(color = 'black', width = 0.6, position = 'dodge', outlier.size = 0.1) +
scale_fill_brewer("Method", palette = 'Dark2') +
labs(x = "Binding site position", y = "RMSE (predicted vs. actual)") +
#facet_wrap(~dset, ncol = 3) +
theme_classic()
ggsave(plot = g, file = paste0(RES_DIR, 'transfer_barreraMuts_rmse_boxplots.pdf'),
height = 4, width = 6)
# Compare per-position performance distinguishing transferred vs predicted columns
g <- ggplot(transferSumm.byColType, aes(x = transfer, y = fracAgree, fill = predType)) +
geom_bar(color = 'black', width = 0.6, stat = 'identity', position = 'dodge') +
scale_y_continuous(limits = c(0,1)) +
scale_fill_brewer(palette = 'Dark2') +
#facet_wrap(~transfer, ncol = 2) +
labs(x = "Column type", y = "Columns in agreement (predicted vs. actual)") +
theme_classic()
ggsave(plot = g, file = paste0(RES_DIR, 'transfer_barreraMuts_pcc_fracAgree_byColType.pdf'),
height = 4, width = 6)
g <- ggplot(transfer, aes(x = transfer, y = rmse, fill = predType)) +
geom_boxplot(color = 'black', width = 0.6, position = 'dodge', outlier.size = 0.1) +
scale_fill_brewer("Method", palette = 'Dark2') +
labs(x = "Column type", y = "RMSE (predicted vs. actual)") +
#facet_wrap(~transfer, ncol = 2) +
theme_classic()
ggsave(plot = g, file = paste0(RES_DIR, 'transfer_barreraMuts_rmse_boxplots_byColType.pdf'),
height = 4, width = 6)
# What about if we do HD1 transfer for all protein pairs with DBD %ID above a
# given threshold?
hd1Allcmp <- fread(paste0(RES_DIR,'pccTable_allHD1Pairs_transfer-model.txt'))
hd1Allcmp$predType <- 'transfer_model'
tmp <- fread(paste0(RES_DIR,'pccTable_allHD1Pairs_transfer-modelNN.txt'))
tmp$predType <- 'transfer_modelNN'
hd1Allcmp <- rbind(hd1Allcmp, tmp)
hd1Allcmp <- merge(hd1Allcmp, matchTab.train[,c('prot','dset')], by.x = 'prot2', by.y = 'prot')
names(hd1Allcmp)[length(hd1Allcmp)] <- 'dset.prot2'
hd1Allcmp <- merge(hd1Allcmp, matchTab.test[,c('prot','dset')], by.x = 'prot1', by.y = 'prot')
names(hd1Allcmp)[length(hd1Allcmp)] <- 'dset.prot1'
hd1Allcmp$pos <- factor(hd1Allcmp$pos)
hd1Allcmp$protPair <- paste(hd1Allcmp$prot1, hd1Allcmp$prot2, sep = '-')
hd1Allcmp$transfer <- ifelse(hd1Allcmp$transfer, 'transfer possible','requires predicition')
hd1Allcmp <- hd1Allcmp[!(prot1 %in% barrera.drop)]
hd1Allcmp.addStormo <- hd1Allcmp
for (i in 1:length(stormoLabs)) {
tmp <- merge(hd1Allcmp[predType == 'transfer_model',
c('prot1','prot2','pos','varPos','transfer','aa',
'dset.prot1','dset.prot2')],
res[predType == stormoLabs[i],c('prot','pos','pcc','rmse','ic.exp',
'ic.pred','predType')],
by.x = c('prot1','pos'), by.y = c('prot','pos'))
tmp$protPair <- paste(tmp$prot1, tmp$prot2, sep = '-')
tmp <- tmp[,names(hd1Allcmp),with = FALSE]
hd1Allcmp.addStormo <- rbind(hd1Allcmp.addStormo[protPair %in% tmp$protPair], tmp)
}
# Get aggregate agreement stats
hd1Allcmp.addStormoSumm <- hd1Allcmp.addStormo[,.(fracAgree = length(which(pcc >= 0.5))/.N,
numCols = .N),
by = c('pos','predType')]
hd1Allcmp.addStormoSumm.byColType <- hd1Allcmp.addStormo[,.(fracAgree = length(which(pcc >= 0.5))/.N,
numCols = .N),
by = c('predType','transfer')]
# Compare overall per-position performance
g <- ggplot(hd1Allcmp.addStormoSumm, aes(x = pos, y = fracAgree, fill = predType)) +
geom_bar(color = 'black', width = 0.6, stat = 'identity', position = 'dodge') +
scale_y_continuous(limits = c(0,1)) +
scale_fill_brewer(palette = 'Dark2') +
labs(x = "Binding site position", y = "Columns in agreement (predicted vs. actual)") +
theme_classic()
ggsave(plot = g, file = paste0(RES_DIR, 'transfer_allHD1_pcc_fracAgree.pdf'),
height = 4, width = 6)
g <- ggplot(hd1Allcmp.addStormo, aes(x = pos, y = rmse, fill = predType)) +
geom_boxplot(color = 'black', width = 0.6, position = 'dodge', outlier.size = 0.1) +
scale_fill_brewer("Method", palette = 'Dark2') +
labs(x = "Binding site position", y = "RMSE (predicted vs. actual)") +
#facet_wrap(~dset, ncol = 3) +
theme_classic()
ggsave(plot = g, file = paste0(RES_DIR, 'transfer_allHD1_rmse_boxplots.pdf'),
height = 4, width = 6)
# Compare overall per-position performance
g <- ggplot(hd1Allcmp.addStormoSumm, aes(x = pos, y = fracAgree, fill = predType)) +
geom_bar(color = 'black', width = 0.6, stat = 'identity', position = 'dodge') +
scale_y_continuous(limits = c(0,1)) +
scale_fill_brewer(palette = 'Dark2') +
labs(x = "Binding site position", y = "Columns in agreement (predicted vs. actual)") +
theme_classic()
ggsave(plot = g, file = paste0(RES_DIR, 'transfer_allHD1_pcc_fracAgree.pdf'),
height = 4, width = 6)
g <- ggplot(hd1Allcmp.addStormoSumm[!(predType %in% c('rf_extant','rf_joint'))],
aes(x = pos, y = fracAgree, fill = predType)) +
geom_bar(color = 'black', width = 0.6, stat = 'identity', position = 'dodge') +
scale_y_continuous(limits = c(0,1)) +
scale_fill_brewer(palette = 'Dark2') +
labs(x = "Binding site position", y = "Columns in agreement (predicted vs. actual)") +
theme_classic()
ggsave(plot = g, file = paste0(RES_DIR, 'transfer_allHD1_pcc_fracAgree_noStormo.pdf'),
height = 4, width = 6)
g <- ggplot(hd1Allcmp.addStormo, aes(x = pos, y = rmse, fill = predType)) +
geom_boxplot(color = 'black', width = 0.6, position = 'dodge', outlier.size = 0.1) +
scale_fill_brewer("Method", palette = 'Dark2') +
labs(x = "Binding site position", y = "RMSE (predicted vs. actual)") +
#facet_wrap(~dset, ncol = 3) +
theme_classic()
ggsave(plot = g, file = paste0(RES_DIR, 'transfer_allHD1_rmse_boxplots.pdf'),
height = 4, width = 6)
g <- ggplot(hd1Allcmp.addStormo[!(predType %in% c('rf_extant','rf_joint'))],
aes(x = pos, y = rmse, fill = predType)) +
geom_boxplot(color = 'black', width = 0.6, position = 'dodge', outlier.size = 0.1) +
scale_fill_brewer("Method", palette = 'Dark2') +
labs(x = "Binding site position", y = "RMSE (predicted vs. actual)") +
#facet_wrap(~dset, ncol = 3) +
theme_classic()
ggsave(plot = g, file = paste0(RES_DIR, 'transfer_allHD1_rmse_boxplots_noStormo.pdf'),
height = 4, width = 6)
# Compare per-position performance distinguishing transferred vs predicted columns
g <- ggplot(hd1Allcmp.addStormoSumm.byColType, aes(x = transfer, y = fracAgree, fill = predType)) +
geom_bar(color = 'black', width = 0.6, stat = 'identity', position = 'dodge') +
scale_y_continuous(limits = c(0,1)) +
scale_fill_brewer(palette = 'Dark2') +
#facet_wrap(~transfer, ncol = 2) +
labs(x = "Column type", y = "Columns in agreement (predicted vs. actual)") +
theme_classic()
ggsave(plot = g, file = paste0(RES_DIR, 'transfer_allHD1_pcc_fracAgree_byColType.pdf'),
height = 4, width = 6)
g <- ggplot(hd1Allcmp.addStormoSumm.byColType[!(predType %in% c('rf_extant','rf_joint'))],
aes(x = transfer, y = fracAgree, fill = predType)) +
geom_bar(color = 'black', width = 0.6, stat = 'identity', position = 'dodge') +
scale_y_continuous(limits = c(0,1)) +
scale_fill_brewer(palette = 'Dark2') +
#facet_wrap(~transfer, ncol = 2) +
labs(x = "Column type", y = "Columns in agreement (predicted vs. actual)") +
theme_classic()
ggsave(plot = g, file = paste0(RES_DIR, 'transfer_allHD1_pcc_fracAgree_byColType_noStormo.pdf'),
height = 4, width = 6)
g <- ggplot(hd1Allcmp.addStormo, aes(x = transfer, y = rmse, fill = predType)) +
geom_boxplot(color = 'black', width = 0.6, position = 'dodge', outlier.size = 0.1) +
scale_fill_brewer("Method", palette = 'Dark2') +
labs(x = "Column type", y = "RMSE (predicted vs. actual)") +
#facet_wrap(~transfer, ncol = 2) +
theme_classic()
ggsave(plot = g, file = paste0(RES_DIR, 'transfer_allHD1_rmse_boxplots_byColType.pdf'),
height = 4, width = 6)
g <- ggplot(hd1Allcmp.addStormo[!(predType %in% c('rf_extant','rf_joint'))],
aes(x = transfer, y = rmse, fill = predType)) +
geom_boxplot(color = 'black', width = 0.6, position = 'dodge', outlier.size = 0.1) +
scale_fill_brewer("Method", palette = 'Dark2') +
labs(x = "Column type", y = "RMSE (predicted vs. actual)") +
#facet_wrap(~transfer, ncol = 2) +
theme_classic()
ggsave(plot = g, file = paste0(RES_DIR, 'transfer_allHD1_rmse_boxplots_byColType_noStormo.pdf'),
height = 4, width = 6)
# Compare once removing training sets for RF-extant and RF-joint independently
hd1Allcmp.addStormo.rfExtantOnly <-
hd1Allcmp.addStormo[!(prot1 %in% trSet.rfExtant) & predType != 'rf_joint']
hd1Allcmp.addStormo.rfJointOnly <-
hd1Allcmp.addStormo[!(prot1 %in% trSet.rfJoint) & predType != 'rf_extant']
# Get aggregate agreement stats
hd1Allcmp.addStormo.rfExtantOnlySumm <-
hd1Allcmp.addStormo.rfExtantOnly[,.(fracAgree = length(which(pcc >= 0.5))/.N,
numCols = .N),
by = c('pos','predType')]
hd1Allcmp.addStormo.rfExtantOnly.byColType <-
hd1Allcmp.addStormo.rfExtantOnly[,.(fracAgree = length(which(pcc >= 0.5))/.N,
numCols = .N),
by = c('predType','transfer')]
hd1Allcmp.addStormo.rfJointOnlySumm <-
hd1Allcmp.addStormo.rfJointOnly[,.(fracAgree = length(which(pcc >= 0.5))/.N,
numCols = .N),
by = c('pos','predType')]
hd1Allcmp.addStormo.rfJointOnly.byColType <-
hd1Allcmp.addStormo.rfJointOnly[,.(fracAgree = length(which(pcc >= 0.5))/.N,
numCols = .N),
by = c('predType','transfer')]
### This doesn't look right ...
}
hd1Prots <- unique(fread(paste0(RES_NONRF,'pccTable_allHD1Pairs_transfer-modelNN.txt'))$prot1)
# Compare de novo predictions only against the rf_extant predictor, but removing all proteins
# that it was trained on from the test set
res.noOlap.rfExtant <- res[predType != 'rf_joint' & !(prot %in% trSet.rfExtant)]
hasNeighbors <- unique(res.noOlap.rfExtant[nnbrs > 0]$prot)
res.noOlap.rfExtant.hd1 <- res[predType != 'rf_joint' & !(prot %in% trSet.rfExtant)
& prot %in% hd1Prots & prot %in% hasNeighbors]
res.noOlap.rfExtantSumm <- res.noOlap.rfExtant[,.(fracAgree = length(which(pcc >= 0.5))/.N,
numCols = .N),
by = c('pos','predType')]
res.noOlap.rfExtant.hd1Summ <- res.noOlap.rfExtant.hd1[,.(fracAgree = length(which(pcc >= 0.5))/.N,
numCols = .N),
by = c('pos','predType')]
g <- ggplot(res.noOlap.rfExtantSumm, aes(x = pos, y = fracAgree, fill = predType)) +
geom_bar(color = 'black', width = 0.6, stat = 'identity', position = 'dodge') +
scale_y_continuous(limits = c(0,1)) +
#geom_text(aes(label=numCols), position=position_dodge(width=0.6), vjust=-0.25,size=2)+
scale_fill_brewer("Column type", palette = 'Dark2') +
labs(x = "Binding site position", y = "Columns in agreement (predicted vs. actual)") +
theme_classic()
ggsave(plot = g, file = paste0(RES_DIR, 'pcc_fracAgree_compareModelVsNN_rfExtantOnly.pdf'),
height = 4, width = 6)
g <- ggplot(res.noOlap.rfExtantSumm[predType != 'model+nn'], aes(x = pos, y = fracAgree, fill = predType)) +
geom_bar(color = 'black', width = 0.6, stat = 'identity', position = 'dodge') +
scale_y_continuous(limits = c(0,1)) +
#geom_text(aes(label=numCols), position=position_dodge(width=0.6), vjust=-0.25,size=2)+
scale_fill_brewer("", palette = 'Dark2') +
labs(x = "Binding site position", y = "Columns in agreement (predicted vs. actual)") +
theme_classic() +
theme(legend.position = 'top')
ggsave(plot = g, file = paste0(RES_DIR, 'pcc_fracAgree_compareModelVsNN_rfExtantOnly_excludeNN.pdf'),
height = 4, width = 4)
g <- ggplot(res.noOlap.rfExtant.hd1Summ, aes(x = pos, y = fracAgree, fill = predType)) +
geom_bar(color = 'black', width = 0.6, stat = 'identity', position = 'dodge') +
scale_y_continuous(limits = c(0,1)) +
#geom_text(aes(label=numCols), position=position_dodge(width=0.6), vjust=-0.25,size=2)+
scale_fill_brewer("Column type", palette = 'Dark2') +
labs(x = "Binding site position", y = "Columns in agreement (predicted vs. actual)") +
theme_classic()
ggsave(plot = g, file = paste0(RES_DIR, 'pcc_fracAgree_compareModelVsNN_rfExtantOnly_hd1.pdf'),
height = 4, width = 6)
g <- ggplot(res.noOlap.rfExtant, aes(x = pos, y = pcc, fill = predType)) +
geom_boxplot(color = 'black', width = 0.6, position = 'dodge', outlier.size = 0.1) +
scale_fill_brewer("Method", palette = 'Dark2') +
geom_hline(yintercept = 0.5, lty = 'dashed') +
labs(x = "Binding site position", y = "PCC between predicted and actual") +
#facet_wrap(~dset, ncol = 3) +
theme_classic()
ggsave(plot = g, file = paste0(RES_DIR, 'pcc_boxplots_rfExtantOnly.pdf'),
height = 4, width = 6)
g <- ggplot(res.noOlap.rfExtant[predType != 'model+nn'], aes(x = pos, y = pcc, fill = predType)) +
geom_boxplot(color = 'black', width = 0.6, position = 'dodge', outlier.size = 0.1) +
scale_fill_brewer("",palette = 'Dark2') +
geom_hline(yintercept = 0.5, lty = 'dashed') +
labs(x = "Binding site position", y = "PCC between predicted and actual") +
#facet_wrap(~dset, ncol = 3) +
theme_classic() +
theme(legend.position = 'top')
ggsave(plot = g, file = paste0(RES_DIR, 'pcc_boxplots_rfExtantOnly_excludeNN.pdf'),
height = 4, width = 4)
res.noOlap.rfExtant
## For Supplemental figure S2, right
s2Tab <- droplevels(res.noOlap.rfExtant[predType != 'model+nn'])
s2Tab
levels(s2Tab$predType)
## For Supplemental figure S2, right
s2Tab <- droplevels(res.noOlap.rfExtant[predType != 'model+nn'])
s2Tab$predType <- plyr::mapvalues(res.noOlap.rfJoint.hd1$predType,
from = c('model', 'rf_extant'),
to = c('rCLAMPS','rf_extant'))
## For Supplemental figure S2, right
s2Tab <- droplevels(res.noOlap.rfExtant[predType != 'model+nn'])
s2Tab$predType <- plyr::mapvalues(s2Tab,from = c('model', 'rf_extant'),to = c('rCLAMPS','rf_extant'))
s2Tab$predType <- plyr::mapvalues(s2Tab$predType,from = c('model', 'rf_extant'),to = c('rCLAMPS','rf_extant'))
## For Supplemental figure S2, right
s2Tab <- droplevels(res.noOlap.rfExtant[predType != 'model+nn'])
s2Tab$predType <- plyr::mapvalues(s2Tab$predType,from = c('model', 'rf_extant'),to = c('rCLAMPS','rf_extant'))
g <- ggplot(s2Tab, aes(x = pos, y = pcc, fill = predType)) +
geom_lv(color = 'black', outlier.size = 1) +
scale_fill_brewer("Method", palette = 'Dark2') +
geom_hline(yintercept = 0.5, lty = 'dashed') +
labs(x = "Method", y = "PCC between predicted and actual") +
scale_y_continuous(limits = c(-1,1)) +
theme_classic()
ggsave(plot = g, file = paste0(RES_DIR, 'pcc_boxplots_rfExtantOnly_excludeNN_boxen.pdf'),
height = 4, width = 4)
g <- ggplot(s2Tab, aes(x = pos, y = pcc, fill = predType)) +
geom_lv(color = 'black', outlier.size = 1) +
scale_fill_brewer("Method", palette = 'Dark2') +
geom_hline(yintercept = 0.5, lty = 'dashed') +
labs(x = "Method", y = "PCC between predicted and actual") +
scale_y_continuous(limits = c(-1,1)) +
theme_classic() +
theme(legend.position = 'top')
ggsave(plot = g, file = paste0(RES_DIR, 'pcc_boxplots_rfExtantOnly_excludeNN_boxen.pdf'),
height = 4, width = 4)
g <- ggplot(s2Tab, aes(x = pos, y = pcc, grp = predType)) +
geom_lv(color = 'black', outlier.size = 1, aes(fill = predType)) +
scale_fill_brewer("Method", palette = 'Dark2') +
geom_hline(yintercept = 0.5, lty = 'dashed') +
labs(x = "Method", y = "PCC between predicted and actual") +
scale_y_continuous(limits = c(-1,1)) +
theme_classic() +
theme(legend.position = 'top')
ggsave(plot = g, file = paste0(RES_DIR, 'pcc_boxplots_rfExtantOnly_excludeNN_boxen.pdf'),
height = 4, width = 4)
g <- ggplot(s2Tab, aes(x = pos, y = pcc, grp = predType)) +
geom_lv(color = 'black', outlier.size = 1, aes(fill = predType), alpha = .03) +
scale_fill_brewer("Method", palette = 'Dark2') +
geom_hline(yintercept = 0.5, lty = 'dashed') +
labs(x = "Method", y = "PCC between predicted and actual") +
scale_y_continuous(limits = c(-1,1)) +
theme_classic() +
theme(legend.position = 'top')
ggsave(plot = g, file = paste0(RES_DIR, 'pcc_boxplots_rfExtantOnly_excludeNN_boxen.pdf'),
height = 4, width = 4)
g <- ggplot(s2Tab, aes(x = pos, y = pcc, grp = predType)) +
geom_lv(color = 'black', outlier.size = 1, aes(fill = predType), alpha = .3) +
scale_fill_brewer("Method", palette = 'Dark2') +
geom_hline(yintercept = 0.5, lty = 'dashed') +
labs(x = "Method", y = "PCC between predicted and actual") +
scale_y_continuous(limits = c(-1,1)) +
theme_classic() +
theme(legend.position = 'top')
ggsave(plot = g, file = paste0(RES_DIR, 'pcc_boxplots_rfExtantOnly_excludeNN_boxen.pdf'),
height = 4, width = 4)
g <- ggplot(s2Tab, aes(x = pos, y = pcc, grp = predType)) +
geom_lv(color = 'black', outlier.size = 1, aes(fill = predType), alpha = .6) +
scale_fill_brewer("Method", palette = 'Dark2') +
geom_hline(yintercept = 0.5, lty = 'dashed') +
labs(x = "Method", y = "PCC between predicted and actual") +
scale_y_continuous(limits = c(-1,1)) +
theme_classic() +
theme(legend.position = 'top')
ggsave(plot = g, file = paste0(RES_DIR, 'pcc_boxplots_rfExtantOnly_excludeNN_boxen.pdf'),
height = 4, width = 4)
g <- ggplot(s2Tab, aes(x = pos, y = pcc, grp = predType)) +
geom_lv(color = 'black', outlier.size = 1, aes(fill = predType), alpha = .7) +
scale_fill_brewer("Method", palette = 'Dark2') +
geom_hline(yintercept = 0.5, lty = 'dashed') +
labs(x = "Method", y = "PCC between predicted and actual") +
scale_y_continuous(limits = c(-1,1)) +
theme_classic() +
theme(legend.position = 'top')
ggsave(plot = g, file = paste0(RES_DIR, 'pcc_boxplots_rfExtantOnly_excludeNN_boxen.pdf'),
height = 4, width = 4)
g <- ggplot(s2Tab, aes(x = pos, y = pcc, grp = predType)) +
geom_lv(color = 'black', outlier.size = 1, aes(fill = predType), alpha = .7) +
scale_fill_brewer("", palette = 'Dark2') +
geom_hline(yintercept = 0.5, lty = 'dashed') +
labs(x = "Method", y = "PCC between predicted and actual") +
scale_y_continuous(limits = c(-1,1)) +
theme_classic() +
theme(legend.position = 'top')
ggsave(plot = g, file = paste0(RES_DIR, 'pcc_boxplots_rfExtantOnly_excludeNN_boxen.pdf'),
height = 4, width = 4)
## Supplemental figure S3, right
s3Tab <- droplevels(res.noOlap.rfJoint[predType != 'model+nn'])
source("~/research/jointInterfaceLearning/rCLAMPS/code/hd1-transfer-predictions-plots.R")
## S2 left
s2left <- droplevels(res.noOlap.rfJointSumm[predType != 'model+nn'])
## S3 left
s3left <- droplevels(res.noOlap.rfJointSumm[predType != 'model+nn'])
s3left$predType <- plyr::mapvalues(s3left$predType,from = c('model', 'rf_extant'),to = c('rCLAMPS','rf_extant'))
## S3 left
s3left <- droplevels(res.noOlap.rfJointSumm[predType != 'model+nn'])
s3left$predType <- plyr::mapvalues(s3left$predType,from = c('model', 'rf_extant'),to = c('rCLAMPS','rf_extant'))
## S3 left
s3left <- droplevels(res.noOlap.rfJointSumm[predType != 'model+nn'])
## S3 left
s3left <- droplevels(res.noOlap.rfJointSumm[predType != 'model+nn'])
s3left$predType <- plyr::mapvalues(s3left$predType,from = c('model', 'rf_joint'),to = c('rCLAMPS','rf_joint'))
g <- ggplot(res.noOlap.rfJointSumm[predType != 'model+nn'], aes(x = pos, y = fracAgree, fill = predType)) +
geom_bar(color = 'black', width = 0.6, stat = 'identity', position = 'dodge') +
scale_y_continuous(limits = c(0,1)) +
#geom_text(aes(label=numCols), position=position_dodge(width=0.6), vjust=-0.25,size=2)+
scale_fill_brewer("", palette = 'Dark2') +
labs(x = "Binding site position", y = "Columns in agreement (predicted vs. actual)") +
theme_classic() +
theme(legend.position = 'top')
## S3 left
s3left <- droplevels(res.noOlap.rfJointSumm[predType != 'model+nn'])
s3left$predType <- plyr::mapvalues(s3left$predType,from = c('model', 'rf_joint'),to = c('rCLAMPS','rf_joint'))
g <- ggplot(res.noOlap.rfJointSumm[predType != 'model+nn'], aes(x = pos, y = fracAgree, fill = predType)) +
geom_bar(color = 'black', width = 0.6, stat = 'identity', position = 'dodge') +
scale_y_continuous(limits = c(0,1)) +
#geom_text(aes(label=numCols), position=position_dodge(width=0.6), vjust=-0.25,size=2)+
scale_fill_brewer("", palette = 'Dark2') +
labs(x = "Binding site position", y = "Columns in agreement (predicted vs. actual)") +
theme_classic() +
theme(legend.position = 'top')
ggsave(plot = g, file = paste0(RES_DIR, 'pcc_fracAgree_compareModelVsNN_rfJointOnly_excludeNN_rCLAMPS.pdf'),
height = 4, width = 7)
g <- ggplot(res.noOlap.rfJointSumm[predType != 'model+nn'], aes(x = pos, y = fracAgree, fill = predType)) +
geom_bar(color = 'black', width = 0.6, stat = 'identity', position = 'dodge') +
scale_y_continuous(limits = c(0,1)) +
#geom_text(aes(label=numCols), position=position_dodge(width=0.6), vjust=-0.25,size=2)+
scale_fill_brewer("", palette = 'Dark2') +
labs(x = "Binding site position", y = "Columns in agreement (predicted vs. actual)") +
theme_classic() +
theme(legend.position = 'top')
ggsave(plot = g, file = paste0(RES_DIR, 'pcc_fracAgree_compareModelVsNN_rfJointOnly_excludeNN_rCLAMPS.pdf'),
height = 4, width = 6)
g <- ggplot(res.noOlap.rfJointSumm[predType != 'model+nn'], aes(x = pos, y = fracAgree, fill = predType)) +
geom_bar(color = 'black', width = 0.6, stat = 'identity', position = 'dodge') +
scale_y_continuous(limits = c(0,1)) +
#geom_text(aes(label=numCols), position=position_dodge(width=0.6), vjust=-0.25,size=2)+
scale_fill_brewer("", palette = 'Dark2') +
labs(x = "Binding site position", y = "Columns in agreement (predicted vs. actual)") +
theme_classic() +
theme(legend.position = 'top')
ggsave(plot = g, file = paste0(RES_DIR, 'pcc_fracAgree_compareModelVsNN_rfJointOnly_excludeNN_rCLAMPS.pdf'),
height = 4, width = 5)
## S3 left
s3left <- droplevels(res.noOlap.rfJointSumm[predType != 'model+nn'])
s3left$predType <- plyr::mapvalues(s3left$predType,from = c('model', 'rf_joint'),to = c('rCLAMPS','rf_joint'))
g <- ggplot(s3left, aes(x = pos, y = fracAgree, fill = predType)) +
geom_bar(color = 'black', width = 0.6, stat = 'identity', position = 'dodge') +
scale_y_continuous(limits = c(0,1)) +
#geom_text(aes(label=numCols), position=position_dodge(width=0.6), vjust=-0.25,size=2)+
scale_fill_brewer("", palette = 'Dark2') +
labs(x = "Binding site position", y = "Columns in agreement (predicted vs. actual)") +
theme_classic() +
theme(legend.position = 'top')
ggsave(plot = g, file = paste0(RES_DIR, 'pcc_fracAgree_compareModelVsNN_rfJointOnly_excludeNN_rCLAMPS.pdf'),
height = 4, width = 5)
ggsave(plot = g, file = paste0(RES_DIR, 'pcc_fracAgree_compareModelVsNN_rfJointOnly_excludeNN_rCLAMPS.pdf'),
height = 4, width = 4)
## S2 left
s2left <- droplevels(res.noOlap.rfExtantSumm[predType != 'model+nn'])
s2left$predType <- plyr::mapvalues(s2left$predType,from = c('model', 'rf_extant'),to = c('rCLAMPS','rf_extant'))
g <- ggplot(s2left, aes(x = pos, y = fracAgree, fill = predType)) +
geom_bar(color = 'black', width = 0.6, stat = 'identity', position = 'dodge') +
scale_y_continuous(limits = c(0,1)) +
#geom_text(aes(label=numCols), position=position_dodge(width=0.6), vjust=-0.25,size=2)+
scale_fill_brewer("", palette = 'Dark2') +
labs(x = "Binding site position", y = "Columns in agreement (predicted vs. actual)") +
theme_classic() +
theme(legend.position = 'top')
ggsave(plot = g, file = paste0(RES_DIR, 'pcc_fracAgree_compareModelVsNN_rfExtantOnly_excludeNN_rCLAMPS.pdf'),
height = 4, width = 4)
## S3 left
s3left <- droplevels(res.noOlap.rfJointSumm[predType != 'model+nn'])
s3left$predType <- plyr::mapvalues(s3left$predType,from = c('model', 'rf_joint'),to = c('rCLAMPS','rf_joint'))
g <- ggplot(s3left, aes(x = pos, y = fracAgree, fill = predType)) +
geom_bar(color = 'black', width = 0.6, stat = 'identity', position = 'dodge') +
scale_y_continuous(limits = c(0,1)) +
#geom_text(aes(label=numCols), position=position_dodge(width=0.6), vjust=-0.25,size=2)+
scale_fill_brewer("", palette = 'Dark2') +
labs(x = "Binding site position", y = "Columns in agreement (predicted vs. actual)") +
theme_classic() +
theme(legend.position = 'top')
ggsave(plot = g, file = paste0(RES_DIR, 'pcc_fracAgree_compareModelVsNN_rfJointOnly_excludeNN_rCLAMPS.pdf'),
height = 4, width = 5.5)
## S2 left
s2left <- droplevels(res.noOlap.rfExtantSumm[predType != 'model+nn'])
s2left$predType <- plyr::mapvalues(s2left$predType,from = c('model', 'rf_extant'),to = c('rCLAMPS','rf_extant'))
g <- ggplot(s2left, aes(x = pos, y = fracAgree, fill = predType)) +
geom_bar(color = 'black', width = 0.6, stat = 'identity', position = 'dodge') +
scale_y_continuous(limits = c(0,1)) +
#geom_text(aes(label=numCols), position=position_dodge(width=0.6), vjust=-0.25,size=2)+
scale_fill_brewer("", palette = 'Dark2') +
labs(x = "Binding site position", y = "Columns in agreement (predicted vs. actual)") +
theme_classic() +
theme(legend.position = 'top')
ggsave(plot = g, file = paste0(RES_DIR, 'pcc_fracAgree_compareModelVsNN_rfExtantOnly_excludeNN_rCLAMPS.pdf'),
height = 4, width = 5.5)
source("~/research/jointInterfaceLearning/rCLAMPS/code/hd1-transfer-predictions-plots.R")
source("~/research/jointInterfaceLearning/rCLAMPS/code/hd1-transfer-predictions-plots.R")
